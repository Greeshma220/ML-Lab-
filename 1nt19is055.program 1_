{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f6c53e97",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The mean or average of all these numbers ( [5, 9, 8, 6, 8] ) is 7.2\n"
     ]
    }
   ],
   "source": [
    "numb = [5, 9, 8, 6, 8]\n",
    "no = len(numb)\n",
    "summ = sum(numb)\n",
    "mean = summ / no\n",
    "print(\"The mean or average of all these numbers (\", numb, \") is\", str(mean))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "613ce2bb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The median of the given numbers  ( [5, 6, 8, 8, 9] ) is 8\n"
     ]
    }
   ],
   "source": [
    "numb = [5, 9, 8, 6, 8]\n",
    "no = len(numb)\n",
    "numb.sort()\n",
    "if no % 2 == 0:\n",
    "    median1 = numb[no//2]\n",
    "    median2 = numb[no//2 - 1]\n",
    "    median = (median1 + median2)/2\n",
    "else:\n",
    "    median = numb[no//2]\n",
    "print(\"The median of the given numbers  (\", numb, \") is\", str(median))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c909a356",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mode of given set of data values is 1\n"
     ]
    }
   ],
   "source": [
    "import statistics\n",
    "numb=[1,1,1,3,2,5,1]\n",
    "my_mode = statistics.mode( numb)\n",
    "print(\"Mode of given set of data values is\", my_mode)  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "c1b7b092",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   weight  price\n",
      "0     900      6\n",
      "1     350      1\n",
      "2     100      3\n",
      "     weight     price\n",
      "0  1.346638  1.297771\n",
      "1 -0.299253 -1.135550\n",
      "2 -1.047385 -0.162221\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "data = {'weight':[900, 350, 100],\n",
    "        'price':[6, 1, 3]}\n",
    "df = pd.DataFrame(data)\n",
    "print(df)\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "scaler = StandardScaler()\n",
    "standardized_data = scaler.fit_transform(df)\n",
    "standardized_df = pd.DataFrame(standardized_data, columns=df.columns)\n",
    "print(standardized_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9dd16333",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.11785113 0.1767767  0.29462783 0.35355339 0.41247896 0.23570226\n",
      "  0.47140452 0.41247896 0.35355339]]\n"
     ]
    }
   ],
   "source": [
    "from sklearn import preprocessing\n",
    "import numpy as np\n",
    "x_array = np.array([2,3,5,6,7,4,8,7,6])\n",
    "normalized_arr = preprocessing.normalize([x_array])\n",
    "print(normalized_arr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2b46f6cc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
